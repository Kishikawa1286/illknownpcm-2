# This file is auto-generated from nearly_equal.jmd.
# Do not edit this file manually.

module NearlyEqual

"""
    isNearlyEqual(a, b; tolerance=1e-6)

    Check if `a` and `b` are nearly equal. The default tolerance is `1e-6`.
"""
function isNearlyEqual(
    a::T,
    b::T;
    tolerance=1e-6
)::Bool where {T <: Real}
    if tolerance < 0
        throw(ArgumentError("tolerance must be non-negative"))
    end

    return abs(a - b) < tolerance
end

"""
    correctPrecisionLoss(a, b; tolerance=1e-6)

    Correct the precision loss between `a` and `b`.
    The default tolerance is `1e-6`.
"""
function correctPrecisionLoss(
    a::T,
    b::T;
    tolerance=1e-6
)::T where {T<:Real}
    if isNearlyEqual(a, b; tolerance=tolerance)
        return b
    else
        return a
    end
end

function correctPrecisionLoss(
    a::Vector{T},
    b::Vector{T};
    tolerance=1e-6
)::Vector{T} where {T<:Real}
    return map(i -> correctPrecisionLoss(a[i], b[i]; tolerance=tolerance), 1:length(a))
end

export isNearlyEqual, correctPrecisionLoss

end
